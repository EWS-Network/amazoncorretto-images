
version: 0.2
env:
  shell: /bin/bash
  variables:
    USE_EPOCH: 1
    PUBLIC_REGISTRY: public.ecr.aws/ews-network/
    RUNTIME_NAME: amazoncorretto
    DOCKER_CLI_EXPERIMENTAL: enabled

phases:
  install:
    commands:
      - if [ -z ${AWS_ACCOUNT_ID+x} ]; then AWS_ACCOUNT_ID=$(aws sts get-caller-identity | jq -r .Account); fi
      - REGISTRY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION:-$AWS_DEFAULT_REGION}.amazonaws.com/
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${REGISTRY_URI}
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${PUBLIC_REGISTRY}
      - if ! [ -z ${CODEBUILD_RESOLVED_SOURCE_VERSION+x} ]; then COMMIT_HASH=${CODEBUILD_RESOLVED_SOURCE_VERSION::7}; fi
      - EPOCH=`date +'%Y%m%d'`
      - SUFFIX=${COMMIT_HASH:=$EPOCH}
      - if [ $USE_EPOCH -eq 1 ]; then SUFFIX=$EPOCH; fi

  build:
    commands:
      - REGISTRY_URL=${PUBLIC_REGISTRY}
      - docker-compose build
      - docker-compose push
      - |
          for VERSION in  8 15 11; do
            ARCH=amd64
            docker manifest  create ${PUBLIC_REGISTRY}${RUNTIME_NAME}:${VERSION} \
              --amend ${PUBLIC_REGISTRY}${RUNTIME_NAME}:${VERSION}.amzn2${ARCH:+-$ARCH}
            docker manifest push ${PUBLIC_REGISTRY}${RUNTIME_NAME}:${VERSION}
          done
    finally:
      - rm -rfv ~/.docker
